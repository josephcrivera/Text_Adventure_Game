/** * Class Command  * * This class holds information about a command that was issued by the user. * A command currently consists of two strings: a command word and a second * word (for example, if the command was "get map", then the two strings * obviously are "get" and "map"). *  * The way this is used is: Commands are already checked for being valid * command words. If the user entered an invalid command (a word that is not * known) then the command word is <null>. * * If the command had only one word, then the second word is <null>. * * The second word is not checked at the moment. It can be anything. You will  * have to check this somewhere else. */class Command{    private String commandWord;    private String secondWord;    /**     * Create a command object. First and second word must be supplied, but     * either one (or both) can be null. The command word should be null to     * indicate that this was a command that is not recognized by this game.     * Set commandWord equal to firstWord, and set secondWord equal to the     * second word in the class.     */    public Command(String firstWord, String secondWord)    {        commandWord = firstWord;        this.secondWord = secondWord;    }    /**     * Return the command word (the first word) of this command. If the     * command was not understood, the result is null.     */    public String getCommandWord()    {        return commandWord;    }    /**     * Return the second word of this command. Returns null if there was no     * second word.     */    public String getSecondWord()    {        return secondWord;    }    /**     * Return true if this command was not understood (if it is null)     */    public boolean isUnknown()    {        return (commandWord == null);    }    /**     * Return true if the command has a second word (if it is not null)     */    public boolean hasSecondWord()    {        return (secondWord != null);    }}